const mongoose = require("mongoose");

const purchaseSchema = new mongoose.Schema(
  {
    email: { type: String, required: true }, // email user

    // üõçÔ∏è Th√¥ng tin s·∫£n ph·∫©m
    items: [
      {
        phoneId: { type: mongoose.Schema.Types.ObjectId, ref: "Phone" },
        name: String,
        color: String,
        storage: String,
        quantity: Number,
        price: Number,
        importPrice: Number,
        image: String,
      },
    ],

    // üí∞ Thanh to√°n
    total: { type: Number, required: true },
    paymentMethod: { type: String, default: "COD" },
    warranty: { type: String, default: "B·∫£o h√†nh th∆∞·ªùng" },

    // üöö Giao h√†ng
    fullName: { type: String, required: true },
    phone: { type: String, required: true },
    shippingAddress: { type: String, required: true },
    province: { type: String, required: true },
    region: {
      type: String,
      enum: ["Mi·ªÅn B·∫Øc", "Mi·ªÅn Trung", "Mi·ªÅn Nam", "Kh√°c"],
      default: "Kh√°c",
    },
    shippingMethod: { type: String, default: "Giao H√†ng Ti·∫øt Ki·ªám" },

    // üì¶ Ph√≠ d·ªãch v·ª•
    regionFee: { type: Number, default: 0 },
    methodFee: { type: Number, default: 0 },
    warrantyFee: { type: Number, default: 0 },

    // üìä Tr·∫°ng th√°i
    status: {
      type: String,
      enum: ["pending", "paid", "done", "unsuccessful", "cancelled"],
      default: "pending",
    },
  },
  { timestamps: true }
);

module.exports = mongoose.model("Purchase", purchaseSchema);
