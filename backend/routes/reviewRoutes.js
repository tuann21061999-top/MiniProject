const express = require("express");
const Review = require("../models/review.js");
const router = express.Router();

// üü¢ L·∫•y review theo email
router.get("/:email", async (req, res) => {
  try {
    const review = await Review.findOne({ email: req.params.email });
    if (!review) return res.json({});
    res.json(review);
  } catch (err) {
    console.error("‚ùå L·ªói khi l·∫•y review:", err);
    res.status(500).json({ error: "Kh√¥ng th·ªÉ t·∫£i ƒë√°nh gi√°" });
  }
});

// üü† G·ª≠i ƒë√°nh gi√° m·ªõi
router.post("/", async (req, res) => {
  try {
    const { email, username, phoneId, phoneName, rating, text } = req.body;
    console.log("üì• Nh·∫≠n d·ªØ li·ªáu ƒë√°nh gi√°:", req.body);

    if (!email || !username || !phoneId || !phoneName || !rating || !text)
      return res.status(400).json({ error: "Thi·∫øu th√¥ng tin ƒë√°nh gi√°" });

    let review = await Review.findOne({ email });

    if (!review) {
      // üÜï N·∫øu ch∆∞a c√≥ review c·ªßa user, t·∫°o m·ªõi
      review = new Review({
        email,
        username,
        comments: {
          cmt1: { phoneId, phoneName, rating, text, date: new Date() },
        },
      });
    } else {
      // üîÅ N·∫øu ƒë√£ c√≥ review c·ªßa user, th√™m cmt m·ªõi
      if (!review.comments) review.comments = {};
      const count = Object.keys(review.comments).length + 1;
      review.comments[`cmt${count}`] = {
        phoneId,
        phoneName,
        rating,
        text,
        date: new Date(),
      };

      // ‚úÖ B√°o v·ªõi Mongoose r·∫±ng object ƒë√£ thay ƒë·ªïi
      review.markModified("comments");
    }

    await review.save();
    console.log("‚úÖ ƒê√£ l∆∞u ƒë√°nh gi√° th√†nh c√¥ng!");
    res.json({ message: "‚úÖ ƒê√°nh gi√° ƒë√£ ƒë∆∞·ª£c l∆∞u!", review });
  } catch (err) {
    console.error("‚ùå L·ªói khi l∆∞u ƒë√°nh gi√°:", err);
    res.status(500).json({ error: err.message || "L∆∞u ƒë√°nh gi√° th·∫•t b·∫°i" });
  }
});

// üü¢ L·∫•y t·∫•t c·∫£ b√¨nh lu·∫≠n theo phoneId (cho ph·∫ßn hi·ªÉn th·ªã c√¥ng khai)
router.get("/all/:phoneId", async (req, res) => {
  try {
    const { phoneId } = req.params;

    // L·∫•y t·∫•t c·∫£ review (m·ªói user c√≥ th·ªÉ c√≥ nhi·ªÅu cmt trong comments object)
    const reviews = await Review.find().lean();

    const allComments = [];

    reviews.forEach((rev) => {
      if (rev.comments) {
        Object.values(rev.comments).forEach((cmt) => {
          // ‚úÖ Ch·ªâ l·∫•y nh·ªØng comment tr√πng phoneId
          if (cmt.phoneId === phoneId) {
            allComments.push({
              username: rev.username,
              phoneId: cmt.phoneId,
              phoneName: cmt.phoneName,
              rating: cmt.rating,
              text: cmt.text,
              date: cmt.date,
            });
          }
        });
      }
    });

    res.json(allComments);
  } catch (err) {
    console.error("‚ùå L·ªói l·∫•y t·∫•t c·∫£ review:", err);
    res.status(500).json({ error: "Kh√¥ng th·ªÉ t·∫£i danh s√°ch b√¨nh lu·∫≠n" });
  }
});

module.exports = router;
